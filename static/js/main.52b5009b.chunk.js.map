{"version":3,"sources":["utils.js","auth.js","containers/Login/useLoginUser.js","containers/Login/Login.js","components/Header.js","components/Footer.js","components/Identity.js","containers/Home/fragments.js","containers/Home/moodOptions.js","containers/Home/Home.js","components/Spinner.js","App.js","serviceWorker.js","index.js"],"names":["safeInvoke","func","args","auth","isAuthenticated","localStorage","getItem","setItem","this","cb","removeItem","useLoginUser","onSuccess","onError","useState","loading","setLoading","login","name","password","setTimeout","authenticated","console","log","message","LoginContainer","styled","Container","StyledForm","Form","defaultState","Login","history","useHistory","loginData","setLoginData","push","err","alert","handleChange","useCallback","event","target","value","onSubmit","preventDefault","FormGroup","row","Label","for","sm","Col","Input","type","id","placeholder","disabled","onChange","check","className","Button","StyledHeader","div","Header","Navbar","color","dark","expand","NavbarBrand","href","Nav","navbar","NavbarText","onClick","logout","StyledFooter","attrs","Date","getFullYear","IdentityContext","React","createContext","useIdentity","useContext","Identity","children","identity","setIdentity","fetchIdentity","useEffect","useGetIdentity","Provider","Page","Math","random","PageTitle","h1","MoodForm","StyledLabel","EmojiContainer","StyledEmoji","Emoji","Home","mood","setMood","get","map","moodOptions","CustomInput","key","inline","label","text","Footer","SpinnerContainer","colors","CustomSpinner","Spinner","AuthenticatedRoute","props","to","MainApp","path","exact","component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","basename","process","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.52b5009b.chunk.js","sourcesContent":["export const safeInvoke = (func, ...args) => (typeof func === 'function' ? func(...args) : null)\r\n","import { safeInvoke } from 'utils'\r\n\r\nconst TOKEN_NAME = 'auth_token'\r\n\r\nclass Auth {\r\n\tisAuthenticated = localStorage.getItem(TOKEN_NAME) === 'true'\r\n\tauthenticated() {\r\n\t\tlocalStorage.setItem(TOKEN_NAME, true)\r\n\t\tthis.isAuthenticated = true\r\n\t}\r\n\tlogout(cb) {\r\n\t\tlocalStorage.removeItem(TOKEN_NAME)\r\n\t\tthis.isAuthenticated = false\r\n\t\tsafeInvoke(cb)\r\n\t}\r\n}\r\n\r\nconst auth = new Auth()\r\n\r\nexport default auth\r\n","import { useState } from 'react'\r\nimport auth from 'auth'\r\nimport { safeInvoke } from 'utils'\r\n\r\nconst useLoginUser = ({ onSuccess, onError }) => {\r\n\tconst [loading, setLoading] = useState(false)\r\n\r\n\tconst handleLogin = ({ name, password }) => {\r\n\t\tsetLoading(true)\r\n\t\tsetTimeout(() => {\r\n\t\t\tif (password === 'realtime') {\r\n\t\t\t\tauth.authenticated()\r\n\t\t\t\t// Set Fake data\r\n\t\t\t\tlocalStorage.setItem('user_name', name)\r\n\t\t\t\tconsole.log('set name', name)\r\n\t\t\t\tsafeInvoke(onSuccess)\r\n\t\t\t} else {\r\n\t\t\t\tsafeInvoke(onError, {\r\n\t\t\t\t\tmessage: 'Password is incorrect!',\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\tsetLoading(false)\r\n\t\t}, 3000)\r\n\t}\r\n\r\n\treturn { login: handleLogin, loading }\r\n}\r\n\r\nexport default useLoginUser\r\n","import React, { useState, useCallback } from 'react'\r\nimport { Container, Form, FormGroup, Label, Col, Input, Button } from 'reactstrap'\r\nimport styled from 'styled-components'\r\nimport { useHistory } from 'react-router-dom'\r\nimport useLoginUser from './useLoginUser'\r\n\r\nconst LoginContainer = styled(Container)`\r\n\tmin-height: 100vh;\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n`\r\n\r\nconst StyledForm = styled(Form)`\r\n\tborder-radius: 0.5rem;\r\n\tbox-shadow: 3px 3px 6px grey;\r\n\tpadding: 1rem;\r\n\twidth: 400px;\r\n`\r\n\r\nconst defaultState = {\r\n\tname: '',\r\n\tpassword: '',\r\n}\r\n\r\nconst Login = () => {\r\n\tconst history = useHistory()\r\n\tconst [loginData, setLoginData] = useState(defaultState)\r\n\tconst { login, loading } = useLoginUser({\r\n\t\tonSuccess: () => {\r\n\t\t\thistory.push('/')\r\n\t\t},\r\n\t\tonError: (err) => alert(err.message),\r\n\t})\r\n\r\n\tconst handleChange = useCallback(\r\n\t\t(event) =>\r\n\t\t\tsetLoginData({\r\n\t\t\t\t...loginData,\r\n\t\t\t\t[event.target.name]: event.target.value,\r\n\t\t\t}),\r\n\t\t[loginData, setLoginData]\r\n\t)\r\n\r\n\tconst handleLogin = (event) => {\r\n\t\tevent.preventDefault()\r\n\t\tlogin(loginData)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<LoginContainer>\r\n\t\t\t\t<StyledForm onSubmit={handleLogin}>\r\n\t\t\t\t\t<FormGroup row>\r\n\t\t\t\t\t\t<Label for='name' sm={4}>\r\n\t\t\t\t\t\t\t{'Name'}\r\n\t\t\t\t\t\t</Label>\r\n\t\t\t\t\t\t<Col sm={8}>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\ttype='name'\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tvalue={loginData['name']}\r\n\t\t\t\t\t\t\t\tid='name'\r\n\t\t\t\t\t\t\t\tplaceholder=\"What's your good name?\"\r\n\t\t\t\t\t\t\t\tdisabled={loading}\r\n\t\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t<FormGroup row>\r\n\t\t\t\t\t\t<Label for='password' sm={4}>\r\n\t\t\t\t\t\t\t{'Password'}\r\n\t\t\t\t\t\t</Label>\r\n\t\t\t\t\t\t<Col sm={8}>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\t\t\tvalue={loginData['password']}\r\n\t\t\t\t\t\t\t\tid='password'\r\n\t\t\t\t\t\t\t\tplaceholder='*********'\r\n\t\t\t\t\t\t\t\tdisabled={loading}\r\n\t\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t<FormGroup check row className='clearfix'>\r\n\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t<Button className='float-right' disabled={loading}>\r\n\t\t\t\t\t\t\t\t{'Login'}\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</FormGroup>\r\n\t\t\t\t</StyledForm>\r\n\t\t\t</LoginContainer>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default Login\r\n","import React from 'react'\r\nimport { Navbar, NavbarBrand, Nav, NavbarText, Button } from 'reactstrap'\r\nimport auth from 'auth'\r\nimport { useHistory } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\n\r\nconst StyledHeader = styled.div`\r\n\tmargin-bottom: 0.5rem;\r\n`\r\n\r\nconst Header = () => {\r\n\tconst history = useHistory()\r\n\treturn (\r\n\t\t<StyledHeader>\r\n\t\t\t<Navbar color='dark' dark expand='md'>\r\n\t\t\t\t<NavbarBrand href='/'>React App</NavbarBrand>\r\n\t\t\t\t<Nav className='mr-auto' navbar></Nav>\r\n\t\t\t\t<NavbarText>\r\n\t\t\t\t\t<Button onClick={() => auth.logout(() => history.push('/'))}>{'Logout'}</Button>\r\n\t\t\t\t</NavbarText>\r\n\t\t\t</Navbar>\r\n\t\t</StyledHeader>\r\n\t)\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst StyledFooter = styled.div.attrs({ className: 'footer' })`\r\n\tbackground-color: #343a40;\r\n\tcolor: #fff;\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\tpadding: 0.5rem 1rem;\r\n\tfont-size: 0.8rem;\r\n`\r\n\r\nconst Header = () => <StyledFooter>{`CopyRight @ Author ${new Date().getFullYear()}`}</StyledFooter>\r\n\r\nexport default Header\r\n","import React, { useState, useContext, useEffect, useCallback } from 'react'\r\n\r\nconst IdentityContext = React.createContext()\r\n\r\nexport const useIdentity = () => useContext(IdentityContext)\r\n\r\nconst useGetIdentity = () => {\r\n\tconst [identity, setIdentity] = useState()\r\n\t// TODO: Replace with actual API call\r\n\tconst fetchIdentity = useCallback(\r\n\t\t() =>\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\t// Get Fake Data\r\n\t\t\t\tconst name = localStorage.getItem('user_name')\r\n\t\t\t\tconsole.log('get name', name)\r\n\t\t\t\tsetIdentity({\r\n\t\t\t\t\tname,\r\n\t\t\t\t})\r\n\t\t\t}, 3000),\r\n\t\t[setIdentity]\r\n\t)\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!identity) {\r\n\t\t\tfetchIdentity()\r\n\t\t}\r\n\t}, [identity, fetchIdentity])\r\n\r\n\treturn identity\r\n}\r\n\r\nconst Identity = ({ children }) => {\r\n\tconst value = useGetIdentity()\r\n\treturn <IdentityContext.Provider value={value}>{children}</IdentityContext.Provider>\r\n}\r\n\r\nexport default Identity\r\n","import styled from 'styled-components'\r\nimport Emoji from 'react-emoji-render'\r\nimport { Label } from 'reactstrap'\r\n\r\nexport const Page = styled.div.attrs({ className: 'content' })`\r\n\tbackground-color: ${`hsl(${360 * Math.random()}, ${25 + 70 * Math.random()}%, ${85 + 10 * Math.random()}%)`};\r\n`\r\n\r\nexport const PageTitle = styled.h1`\r\n\ttext-align: center;\r\n\tword-break: break-all;\r\n`\r\n\r\nexport const Container = styled.div`\r\n\tpadding: 1rem;\r\n\tmargin: auto;\r\n\tmax-width: 400px;\r\n`\r\n\r\nexport const MoodForm = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\talign-items: center;\r\n\tborder-radius: 0.5rem;\r\n\tbackground: white;\r\n\tpadding: 1rem;\r\n\tbox-shadow: 3px 3px 6px grey;\r\n`\r\n\r\nexport const StyledLabel = styled(Label)`\r\n\tfont-size: 1.5rem;\r\n\tfont-weight: 500;\r\n`\r\n\r\nexport const EmojiContainer = styled.div`\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n`\r\n\r\nexport const StyledEmoji = styled(Emoji)`\r\n\tfont-size: 10rem;\r\n`\r\n","export default [\r\n\t{\r\n\t\tname: 'Happy',\r\n\t\tvalue: '😊',\r\n\t},\r\n\t{\r\n\t\tname: 'Neutral',\r\n\t\tvalue: '😐',\r\n\t},\r\n\t{\r\n\t\tname: 'Sad',\r\n\t\tvalue: '😞',\r\n\t},\r\n]\r\n","import React, { useState } from 'react'\r\nimport get from 'lodash/get'\r\nimport Header from 'components/Header'\r\nimport Footer from 'components/Footer'\r\nimport { useIdentity } from 'components/Identity'\r\nimport { CustomInput } from 'reactstrap'\r\nimport { map } from 'lodash'\r\nimport { Page, MoodForm, PageTitle, Container, EmojiContainer, StyledEmoji, StyledLabel } from './fragments'\r\nimport moodOptions from './moodOptions'\r\n\r\nconst Home = () => {\r\n\tconst identity = useIdentity()\r\n\tconst [mood, setMood] = useState('')\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Page>\r\n\t\t\t\t<Header />\r\n\t\t\t\t<PageTitle>{`Hello ${get(identity, 'name', 'there')}!`}</PageTitle>\r\n\t\t\t\t<Container>\r\n\t\t\t\t\t<MoodForm>\r\n\t\t\t\t\t\t<StyledLabel for='exampleCheckbox'>{'How are you feeling today?'}</StyledLabel>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t{map(moodOptions, ({ value, name }) => (\r\n\t\t\t\t\t\t\t\t<CustomInput\r\n\t\t\t\t\t\t\t\t\tkey={name}\r\n\t\t\t\t\t\t\t\t\tinline\r\n\t\t\t\t\t\t\t\t\ttype='radio'\r\n\t\t\t\t\t\t\t\t\tid={name}\r\n\t\t\t\t\t\t\t\t\tonChange={() => setMood(value)}\r\n\t\t\t\t\t\t\t\t\tname={'mood'}\r\n\t\t\t\t\t\t\t\t\tlabel={name}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</MoodForm>\r\n\t\t\t\t\t<EmojiContainer>\r\n\t\t\t\t\t\t<StyledEmoji text={mood} />\r\n\t\t\t\t\t</EmojiContainer>\r\n\t\t\t\t</Container>\r\n\t\t\t</Page>\r\n\t\t\t<Footer />\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\nimport { Spinner } from 'reactstrap'\r\nimport styled from 'styled-components'\r\nimport { map } from 'lodash'\r\n\r\nconst SpinnerContainer = styled.div`\r\n\tposition: fixed;\r\n\ttop: 50%;\r\n\tleft: 50%;\r\n\ttransform: translate(-50%, -50%);\r\n`\r\n\r\nconst colors = ['primary', 'success', 'danger', 'warning', 'info']\r\n\r\nconst CustomSpinner = () => (\r\n\t<SpinnerContainer>\r\n\t\t{map(colors, (color) => (\r\n\t\t\t<Spinner type='grow' color={color} key={color} />\r\n\t\t))}\r\n\t</SpinnerContainer>\r\n)\r\n\r\nexport default CustomSpinner\r\n","import React from 'react'\nimport { Switch, Route, Redirect } from 'react-router-dom'\nimport Login from 'containers/Login'\nimport Home from 'containers/Home'\nimport Identity, { useIdentity } from 'components/Identity'\nimport CustomSpinner from 'components/Spinner'\nimport auth from './auth'\n\nconst AuthenticatedRoute = (props) => {\n\tconst identity = useIdentity()\n\tif (!identity) {\n\t\treturn <CustomSpinner />\n\t}\n\n\treturn auth.isAuthenticated ? <Route {...props} /> : <Redirect to='/login' />\n}\n\nconst MainApp = () => (\n\t<Identity>\n\t\t<Switch>\n\t\t\t<AuthenticatedRoute path='/' exact component={Home} />\n\t\t</Switch>\n\t</Identity>\n)\n\nfunction App() {\n\treturn (\n\t\t<div className='App'>\n\t\t\t<Switch>\n\t\t\t\t<Route path='/login' exact component={Login} />\n\t\t\t\t<Route path='/' exact component={MainApp} />\n\t\t\t\t<Redirect to='/' />\n\t\t\t</Switch>\n\t\t</div>\n\t)\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'bootstrap/dist/css/bootstrap.css'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Router basename={process.env.PUBLIC_URL}>\n\t\t\t<App />\n\t\t</Router>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}